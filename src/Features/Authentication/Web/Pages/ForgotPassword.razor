@page "/forgot-password"
@using Argus.Features.Authentication.Web.Services
@inject IAuthenticationService AuthService
@inject NavigationManager Navigation

<div class="min-h-screen flex items-center justify-center bg-gray-50">
    <div class="max-w-md w-full space-y-8">
        <div>
            <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
                Reset your password
            </h2>
            <p class="mt-2 text-center text-sm text-gray-600">
                Enter your email address and we'll send you a link to reset your password.
            </p>
        </div>
        <EditForm Model="@model" OnValidSubmit="HandleSubmit" class="mt-8 space-y-6">
            <DataAnnotationsValidator />
            <div>
                <label for="email" class="sr-only">Email address</label>
                <InputText id="email" type="email" @bind-Value="model.Email"
                    class="appearance-none rounded relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
                    placeholder="Email address" />
            </div>

            <div>
                <button type="submit"
                    class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                    Send reset link
                </button>
            </div>

            @if (!string.IsNullOrEmpty(message))
            {
                <div class="rounded-md bg-green-50 p-4">
                    <div class="flex">
                        <div class="ml-3">
                            <p class="text-sm font-medium text-green-800">@message</p>
                        </div>
                    </div>
                </div>
            }

            <ValidationSummary />
        </EditForm>
    </div>
</div>

@code {
    private ForgotPasswordModel model = new();
    private string message;

    private async Task HandleSubmit()
    {
        var result = await AuthService.InitiatePasswordResetAsync(model.Email);
        if (result.IsSuccess)
        {
            message = "If an account exists for this email, you will receive a password reset link shortly.";
            model = new ForgotPasswordModel();
        }
    }

    private class ForgotPasswordModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; }
    }
}