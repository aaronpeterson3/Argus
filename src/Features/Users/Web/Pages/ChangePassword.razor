@page "/change-password"
@using Argus.Features.Users.Web.Services
@inject IUserService UserService

<div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
    <div class="px-4 py-6 sm:px-0">
        <div class="border-4 border-gray-200 rounded-lg p-8">
            <h1 class="text-2xl font-semibold text-gray-900">Change Password</h1>

            <EditForm Model="@model" OnValidSubmit="HandleSubmit" class="space-y-8 divide-y divide-gray-200 mt-6">
                <DataAnnotationsValidator />

                <div class="space-y-6">
                    <div>
                        <label for="currentPassword" class="block text-sm font-medium text-gray-700">Current Password</label>
                        <div class="mt-1">
                            <InputText id="currentPassword" type="password" @bind-Value="model.CurrentPassword"
                                class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" />
                        </div>
                    </div>

                    <div>
                        <label for="newPassword" class="block text-sm font-medium text-gray-700">New Password</label>
                        <div class="mt-1">
                            <InputText id="newPassword" type="password" @bind-Value="model.NewPassword"
                                class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" />
                        </div>
                    </div>

                    <div>
                        <label for="confirmPassword" class="block text-sm font-medium text-gray-700">Confirm New Password</label>
                        <div class="mt-1">
                            <InputText id="confirmPassword" type="password" @bind-Value="model.ConfirmPassword"
                                class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" />
                        </div>
                    </div>
                </div>

                <div class="pt-6">
                    <div class="flex justify-end">
                        <button type="submit"
                            class="ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            Change Password
                        </button>
                    </div>
                </div>

                <ValidationSummary />
            </EditForm>

            @if (!string.IsNullOrEmpty(message))
            {
                <div class="mt-4 rounded-md bg-green-50 p-4">
                    <div class="flex">
                        <div class="ml-3">
                            <p class="text-sm font-medium text-green-800">@message</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private ChangePasswordModel model = new();
    private string message;

    private async Task HandleSubmit()
    {
        if (model.NewPassword != model.ConfirmPassword)
        {
            message = "New password and confirmation do not match";
            return;
        }

        var result = await UserService.ChangePasswordAsync(model.CurrentPassword, model.NewPassword);
        if (result.IsSuccess)
        {
            message = "Password changed successfully";
            model = new ChangePasswordModel();
        }
        else
        {
            message = result.Error;
        }
    }

    private class ChangePasswordModel
    {
        [Required]
        public string CurrentPassword { get; set; }

        [Required]
        [StringLength(100, MinimumLength = 8)]
        public string NewPassword { get; set; }

        [Required]
        public string ConfirmPassword { get; set; }
    }
}