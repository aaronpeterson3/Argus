@page "/profile"
@using Argus.Features.Users.Web.Services
@inject IUserService UserService

<div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
    <div class="px-4 py-6 sm:px-0">
        <div class="border-4 border-gray-200 rounded-lg p-8">
            <h1 class="text-2xl font-semibold text-gray-900">Profile Settings</h1>

            <EditForm Model="@profile" OnValidSubmit="HandleSubmit" class="space-y-8 divide-y divide-gray-200 mt-6">
                <DataAnnotationsValidator />

                <div class="space-y-6">
                    <div>
                        <label for="firstName" class="block text-sm font-medium text-gray-700">First Name</label>
                        <div class="mt-1">
                            <InputText id="firstName" @bind-Value="profile.FirstName"
                                class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" />
                        </div>
                    </div>

                    <div>
                        <label for="lastName" class="block text-sm font-medium text-gray-700">Last Name</label>
                        <div class="mt-1">
                            <InputText id="lastName" @bind-Value="profile.LastName"
                                class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" />
                        </div>
                    </div>

                    <div>
                        <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                        <div class="mt-1">
                            <InputText id="email" type="email" @bind-Value="profile.Email" readonly
                                class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md bg-gray-50" />
                        </div>
                    </div>
                </div>

                <div class="pt-6">
                    <div class="flex justify-end">
                        <button type="submit"
                            class="ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            Save Changes
                        </button>
                    </div>
                </div>

                <ValidationSummary />
            </EditForm>

            @if (!string.IsNullOrEmpty(message))
            {
                <div class="mt-4 rounded-md bg-green-50 p-4">
                    <div class="flex">
                        <div class="ml-3">
                            <p class="text-sm font-medium text-green-800">@message</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private UserProfileModel profile = new();
    private string message;

    protected override async Task OnInitializedAsync()
    {
        var result = await UserService.GetProfileAsync();
        if (result.IsSuccess)
        {
            profile = new UserProfileModel
            {
                FirstName = result.Value.FirstName,
                LastName = result.Value.LastName,
                Email = result.Value.Email
            };
        }
    }

    private async Task HandleSubmit()
    {
        var result = await UserService.UpdateProfileAsync(profile);
        if (result.IsSuccess)
        {
            message = "Profile updated successfully";
        }
    }

    private class UserProfileModel
    {
        [Required]
        public string FirstName { get; set; }

        [Required]
        public string LastName { get; set; }

        [EmailAddress]
        public string Email { get; set; }
    }
}