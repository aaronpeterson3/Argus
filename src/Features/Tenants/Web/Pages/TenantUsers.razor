@page "/tenants/{TenantId}/users"
@using Argus.Features.Tenants.Web.Services
@inject ITenantService TenantService
@inject NavigationManager Navigation

<div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
    <div class="px-4 py-6 sm:px-0">
        <div class="border-4 border-gray-200 rounded-lg p-8">
            <div class="sm:flex sm:items-center">
                <div class="sm:flex-auto">
                    <h1 class="text-2xl font-semibold text-gray-900">Users</h1>
                    <p class="mt-2 text-sm text-gray-700">A list of all users in this tenant including their role.</p>
                </div>
                <div class="mt-4 sm:mt-0 sm:ml-16 sm:flex-none">
                    <button type="button" @onclick="() => Navigation.NavigateTo($"/tenants/{TenantId}/invite")"
                        class="inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:w-auto">
                        Invite User
                    </button>
                </div>
            </div>

            <div class="mt-8 flex flex-col">
                <div class="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
                    <div class="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
                        <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg">
                            <table class="min-w-full divide-y divide-gray-300">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Name</th>
                                        <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Email</th>
                                        <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Role</th>
                                        <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Joined Date</th>
                                    </tr>
                                </thead>
                                <tbody class="divide-y divide-gray-200 bg-white">
                                    @foreach (var user in users)
                                    {
                                        <tr>
                                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-900">@user.Name</td>
                                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.Email</td>
                                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.Role</td>
                                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.JoinedAt.ToString("MMM d, yyyy")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string TenantId { get; set; }

    private List<UserViewModel> users = new();

    protected override async Task OnInitializedAsync()
    {
        var result = await TenantService.GetUsersAsync(TenantId);
        if (result.IsSuccess)
        {
            users = result.Value.Select(u => new UserViewModel
            {
                Name = $"{u.FirstName} {u.LastName}",
                Email = u.Email,
                Role = u.Role,
                JoinedAt = u.JoinedAt
            }).ToList();
        }
    }

    private class UserViewModel
    {
        public string Name { get; set; }
        public string Email { get; set; }
        public string Role { get; set; }
        public DateTime JoinedAt { get; set; }
    }
}